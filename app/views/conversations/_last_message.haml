- messages = Message.get_ordered_messages_for_conversation(conversation.id)

- unless conversation.messages.blank?
  - message = conversation.messages.last
  - if !conversation.messages.where('sender_id = ? and recipient_id != ?', current_user, current_user).last.blank?
    - profile = conversation.messages.where('sender_id = ? and recipient_id != ?', current_user, current_user).last.recipient.profile
  - else
    - profile = conversation.messages.last.sender.profile
  %tr{:class => "#{'unread' unless conversation.read?(current_user)}" }
    %td.span1{:data => {:conversation_id => conversation.id}}
      =# profile.user.id
      = link_to image_tag(display_image(profile.photos, :thumb)), user_conversation_path(current_user, conversation), :class => "thumbnail"
    %td
      -if conversation.messages.length > 1
        %h5{:class => "#{'unread_msg' unless conversation.read?(current_user)} tk-ff-tisa-web-pro" }
          Last reply by <span>#{last_reply_name(conversation.messages.last.sender)}:</span>
      -else
        %span{:class => "#{'unread_msg' unless conversation.read?(current_user)} last-reply tk-ff-tisa-web-pro" }
          = link_to message.sender.profile.full_name, user_conversation_path(current_user, conversation), :class => "desc"
      %br/
    %td= time_ago_in_words(message.updated_at) + " ago"
    %td
      - if !searched && !archived
        %a.close{:href => "#{user_conversation_archive_path(current_user, conversation)}",
                 :rel => "tooltip",
                 "data-confirm" => 'Are you sure?',
                 "data-original-title" => "Archive",
                 "data-placement" => "bottom"}archive
  %tr
    %td{:colspan => 4}
      %p
        - hash_of_replies = to_hash_with_subject_as_keys(messages)
        - temp = 0
        .accordion{:id => "accordion#{conversation_index}"}
          - hash_of_replies.each_pair do |subject, messages|
            .accordion-group
              .accordion-heading
                %a.accordion-toggle{"data-parent" => "#accordion#{conversation_index}", "data-toggle" => "collapse", :href => "#collapse#{conversation_index}#{temp}"}
                  = subject
              .accordion-body.collapse{:id => "collapse#{conversation_index}#{temp}", :class => "#{(temp > 0)? '' : 'in'}"}
                .accordion-inner
                  %table
                    - messages.reverse.each do |reply|
                      %tr
                        %td
                          = link_to image_tag(display_image(reply.sender.profile.photos, :thumb)), user_conversation_path(current_user, conversation), :class => "thumbnail"
                        %td
                          = reply.body 
                        %td= time_ago_in_words(message.updated_at) + " ago"
                    %tr
                      %td
                      %td
                        - conversation.messages.build
                        = semantic_form_for conversation, :url => user_conversation_path(current_user, conversation) do |f|
                          = semantic_fields_for :message do |m|
                            = m.inputs do
                              = m.input :subject, :as => :hidden, :label => false, :input_html => { :value => subject,:placeholder => "Your comment...", :rows => "5", :style => "width:370px;"}
                              = m.input :body, :as => :text, :label => false, :input_html => {:placeholder => "Your comment...", :rows => "5", :style => "width:370px;"}
                          = f.buttons do
                            = f.commit_button "Reply", :button_html => {:class => "btn btn-primary", :id => nil}


            - temp = temp + 1


