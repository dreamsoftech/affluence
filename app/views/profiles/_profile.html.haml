.accordion-group
  .accordion-heading
    %a.accordion-toggle{"data-parent" => "#accordion2", "data-toggle" => "collapse", :href => "#collapseOne" }
      %h3 Profile Info
  / according-heading
  #collapseOne.accordion-body.in.collapse{:style => "height: auto; "}
    .accordion-inner
      #profile
        = form_for current_user.profile, :html => { :class => "form-horizontal" } do |f|
          %fieldset
            .control-group
              %label.control-label{:for => "fileInput"} Profile Picture
              .controls
                %input#fileInput.input-file{:type => "file"}
            %hr
              .control-group
                %label.control-label{:for => "input01"} Name
                .controls
                  %input.input.span2{:placeholder => "First", :type => "text"}
                    %input.input.span2{:placeholder => "Middle (optional)", :type => "text"}
                      %input.input.span2{:placeholder => "Last", :type => "text"}
              .control-group
                %label.control-label{:for => "input04"} Email
                .controls
                  %input.input.span4{:placeholder => "blake.macleod@gmail.com", :type => "text"}
              .control-group
                %label.control-label{:for => "input05"} Phone #
                .controls
                  %input.input.span3{:placeholder => "773-336-2323", :type => "text"}
              .control-group
                %label.control-label{:for => "select01"} Location
                .controls
                  %select#select01.span2
                    %option Country
                    %option United States
                    %option Canada
                    %option England
                    %option France
                  %select#select02.span2
                    %option State
                    %option Alabama
                    %option Alaska
                    %option Arizona
                    %option Arkansa
                  %input.input.span2{:placeholder => "City", :type => "text"}
              .control-group
                %label.control-label{:for => "input03"} Work
                .controls
                  %input.input.span2{:placeholder => "Title", :type => "text"}
                    %input.input.span2{:placeholder => "Company", :type => "text"}
              %hr
                .control-group
                  %label.control-label{:for => "textarea"} Bio
                  .controls
                    %textarea#textarea.input.span6{:rows => "8"}
                %hr
                  .control-group
                    %label.control-label{:for => "textarea"} Associations
                    .controls
                      = f.text_area :association_list, :rows => '3', :class => '.input-xlarge ui-autocomplete-input'
                      %p.help-block 1 Association per line
                  .control-group
                    %label.control-label{:for => "textarea"} Interests
                    .controls
                      = f.text_area :interest_list, :rows => '3', :class => '.input-xlarge ui-autocomplete-input'
                      %p.help-block 1 Interest per line
                  .control-group
                    %label.control-label{:for => "textarea"} Expertise
                    .controls
                      = f.text_area :expertise_list, :rows => '3', :class => '.input-xlarge ui-autocomplete-input'
                      %p.help-block 1 Expertise per line
                  .form-actions
                    %button.btn.btn-primary{:type => "submit"} Save changes


  :javascript
    $(function() {
      function split( val ) {
        return val.split( /,\s*/ );
      }
      function extractLast( term ) {
        return split( termÂ ).pop();
      }
      var url = null;
      $( "#profile_interest_list" )
        // don't navigate away from the field on tab when selecting an item
        .bind( "keydown", function( event ) {
          if ( event.keyCode === $.ui.keyCode.TAB &&
              $( this ).data( "autocomplete" ).menu.active ) {
            event.preventDefault();
          }
        })
        .autocomplete({
          source: function( request, response ) {
            $.getJSON( "#{autocomplete_interest_name_profiles_path}", {
              term: extractLast( request.term )
            }, response );
          },
          search: function() {
            // custom minLength
            var term = extractLast( this.value );
            if ( term.length < 2 ) {
              return false;
            }
          },
          focus: function() {
            // prevent value inserted on focus
            return false;
          },
          select: function( event, ui ) {
            var terms = split( this.value );
            // remove the current input
            terms.pop();
            // add the selected item
            terms.push( ui.item.value );
            // add placeholder to get the comma-and-space at the end
            terms.push( "" );
            this.value = terms.join( ", " );
            return false;
          }
        });
    }); 
  